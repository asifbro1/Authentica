{
	"compiler": {
		"version": "0.8.15+commit.e14f2714"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_courseTittle",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_duration",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "institute",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "cauth",
						"type": "string"
					}
				],
				"name": "certificateIssued",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_studentAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "stakeReturned",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_courseTittle",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_duration",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "institute",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "cauth",
						"type": "string"
					}
				],
				"name": "issueCertificate",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_adminParameter",
						"type": "address"
					}
				],
				"name": "setAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "setOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "stakedAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "cauth",
						"type": "string"
					}
				],
				"name": "updateCertificateRecipient",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "cauth",
						"type": "string"
					},
					{
						"internalType": "address payable",
						"name": "_staker",
						"type": "address"
					}
				],
				"name": "updateCertificateRecipientForStaking",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"certificateissuer.sol": "CertificateIssuer"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"certificateissuer.sol": {
			"keccak256": "0x5a59b4540617347fee2d5efca6189aa64495b684339fd733289cc0ddb2d9fd7e",
			"license": "MIT",
			"urls": [
				"bzz-raw://99d7113b5d900821ce8e604fc2b6c0ab9f201532d6967c9cba1430c2e15719e6",
				"dweb:/ipfs/Qmc8Y5PBgxzeX15mrv9RCEsiypUmR3FFwcLdt4V74vi6FD"
			]
		},
		"ownable.sol": {
			"keccak256": "0x4c90c9d763132cd998b48eb2ec6228913454e70ef9343e1b3121d43c83920c0c",
			"license": "MIT",
			"urls": [
				"bzz-raw://68c290e34e0661385d8816f390017a61a37ebeef577266d0eb226ab6ccfc8795",
				"dweb:/ipfs/QmRUPwQ31Sv9v2uXPjyfBx4xkHsjhyL1yHRvwNUJSB1Tqd"
			]
		}
	},
	"version": 1
}